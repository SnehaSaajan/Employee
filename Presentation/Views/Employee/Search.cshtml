@model Presentation.Models.SearchViewModel

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="~/Scripts/Script.js"></script>
}


<h2>Employee List</h2>@using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
    <div class="form-group">

        <input type="submit" name="btnReset" value="RESET" class="btn btn-success" />
    </div>
}
<hr />


<hr />

@using (Html.BeginForm("Search", "Employee", FormMethod.Get))
{   @Html.AntiForgeryToken()

    <div class="form form-group">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr />
        <div class="panel-group">
            <div class="panel panel-success">
                <div class="panel-heading">Search</div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-3" style="margin-top:15px">
                            @Html.LabelFor(model => model.Field, htmlAttributes: new { @class = "form-control" })
                            @Html.DropDownListFor(model => model.Field, (IEnumerable<SelectListItem>)ViewData["Fields"], "--pick--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Field, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                            @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewData["Types"], "--pick--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.IsNot, htmlAttributes: new { @class = "form-control" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsNot)
                                @Html.ValidationMessageFor(model => model.IsNot, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-1">
                            <input type="submit" id="btnFilter" value="FILTER" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-success">

                <div class="panel-body">
                    <div class="row">
                        <div class="form-group" id="Value" style="margin-top:15px">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "form-control " })
                                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="Designation" style="margin-top:15px">
                            <div class="col-md-2">
                                @Html.Label("Designations", htmlAttributes: new { @class = "form-control" })
                                @Html.DropDownList("Designations", (IEnumerable<SelectListItem>)ViewData["Designations"], "--pick--", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group" id="Band">
                            <div class="col-md-2">
                                @Html.Label("Bands", htmlAttributes: new { @class = "form-control" })
                                @Html.DropDownList("Bands", (IEnumerable<SelectListItem>)ViewData["Bands"], "--pick--", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group" id="FromDate" style="margin-top:15px">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "form-control" })
                                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            </div>
                        </div>
                        <div class="form-group" id="ToDate" style="margin-top:15px">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "form-control" })
                                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>

    @Html.Partial("_View", ViewData["Search"])
</div>


